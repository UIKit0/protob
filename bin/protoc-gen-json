#!/usr/bin/env node

var Compiler = require('../lib/compiler').Compiler;
var registry = Compiler.compile();
var Util = require('util');

var ByteBuffer = require('bytebuffer');

var buffer = new ByteBuffer(undefined, true);

process.stdin.on("data", function(data) {
  buffer.append(ByteBuffer.wrap(data));
});

process.stdin.on("end", function(){
  buffer.flip();
  var Request  = registry["google.protobuf.compiler.CodeGeneratorRequest"];
  var Response = registry["google.protobuf.compiler.CodeGeneratorResponse"];
  var File     = registry["google.protobuf.compiler.CodeGeneratorResponse"];

  var request  = Request.decode(buffer)
  var response = new Response();
  file = new File({ name: "compiled-protos.json", content: JSON.stringify(request.proto_file, null, 2)});
  response.file = [file];

  console.error(Util.inspect(response.allFields, { depth: null, colors: true}));

  var result = response.encode().toBuffer();
  // console.error(result);

  console.error( Util.inspect( Response.decode(response.encode()) ) );

  process.stdout.write(result, function(){ console.error("DONE:", arguments); });
  console.error(result);
});


process.stdin.resume();


