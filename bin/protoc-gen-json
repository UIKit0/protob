#!/usr/bin/env node

var Compiler = require('../lib/compiler').Compiler;
var registry = Compiler.compile();
var Util = require('util');

var ByteBuffer = require('bytebuffer');

var buffer = new ByteBuffer(undefined, true);

process.stdin.on("data", function(data) {
  buffer.append(ByteBuffer.wrap(data));
});

process.stdin.on("end", function(){
  buffer.flip();

  var Request  = registry["google.protobuf.compiler.CodeGeneratorRequest"];
  var Response = registry["google.protobuf.compiler.CodeGeneratorResponse"];
  var File     = registry["google.protobuf.compiler.CodeGeneratorResponse"];

  var request  = Request.decode(buffer)
  var response = new Response();
  response.file = [];

  request.proto_file.forEach(function(file){
    console.error("FILE", file);
    var f = new File();
    f.name    = file.name.replace(/\.proto$/, '.json');
    f.content = JSON.stringify([file], null, 2);
    response.file.push(f);
  });

  console.error("GOING TO WRITE THE RESULT");
  var result = response.encode().toBuffer();
  console.error("Written the result");

  process.stdout.write(result)
});


process.stdin.resume();


